  // for(char i=0; i<100000; i++)
    // {
    //     get_all_moves(test2,  1);
    // }

    // for(auto move : all_moves)
    // {
    //     for(char i=0; i<8; i++)
    //     {
    //         for(char j=0; j<8; j++)
    //             std::cout<<move[i][j]<<" ";
    //         std::cout<<endl;
    //     }

    //     std::cout<<endl<<endl;
    // }

    // for(auto piece : all_pieces)
    // {
    //     cout<<piece[0]<<"-"<<piece[1]<<endl;
    // }

    //  char piece[2], move[2];
    //  piece[0] = 5; piece[1] = 4;
    //  move[0] = 5; move[1] = 2;

    //  std::cout<<test3[1][2]<<endl;

    //  vector<char*> parent_list5;
    //  char *g = new char[2], *h = new char[2], *l = new char[2], *p = new char[2];
    //  g[0]=4;g[1]=3;h[0]=2;h[1]=3;l[0]=1;l[1]=1;p[0]=1;p[1]=3;
    //  parent_list5.push_back(g);
    //  parent_list5.push_back(h);
    //  parent_list5.push_back(l);
    //  parent_list5.push_back(p);
    
    //  vector<vector<char*>> parent_list6;
    //  parent_list6.push_back(parent_list5);

    //  test3 = move_piece(piece, move, test2, parent_list6, 4);
    //  std::cout<<test3[1][2]<<endl;

    // vector<char*> force_list = check_for_force(test2, 1);
    // auto allMoves = get_all_moves(test2, 1);
    // vector<vector<char*>> parent_list = eat_max2_not_dama(4, 3, test2, parent_list6, 2, 0);
    // for(auto value : allMoves.first){
    //     printBoard(value);
    // }

    // for(char j=0; j<(char)valid_moves.size(); j++)
    // {
    //     cout<< valid_moves[j][0]<<"-"<<valid_moves[j][1]<<endl;
    // }

    // for(char i=0; i<(char)parent_list.size(); i++)
    // {
    //     for(char j=0; j<(char)parent_list[i].size(); j++)
    //     {
    //         cout<< parent_list[i][j][0]<<"-"<<parent_list[i][j][1]<<endl;
    //     }
    //     cout<<endl;
    // }